apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "plank.name" . }}
  labels:
    app: {{ template "plank.name" . }}
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: {{ template "plank.name" . }}
    spec:
      terminationGracePeriodSeconds: {{ .Values.plank.terminationGracePeriodSeconds }}
      containers:
      - name: {{ template "plank.name" . }}
        image: {{ .Values.plank.image.repository }}:{{ .Values.plank.image.tag }}
        imagePullPolicy: {{ .Values.plank.imagePullPolicy }}
{{ if .Values.hook.args }}
        args:
{{ toYaml .Values.hook.args | indent 10 }}
{{- end }}
{{- if .Values.plank.env }}
        env:
{{- range $pkey, $pval := .Values.plank.env }}
        - name: {{ $pkey }}
          value: {{ $pval }}
{{- end }}
{{- end }}
        resources:
{{ toYaml .Values.plank.resources | indent 10 }}
        volumeMounts:
        - name: oauth
          mountPath: /etc/github
          readOnly: true
        - name: config
          mountPath: /etc/config
          readOnly: true
      volumes:
      - name: oauth
        secret:
          secretName: oauth-token
      - name: config
        configMap:
          name: config